{"version":3,"sources":["assets/images/two-tone-light.svg","context.tsx","types.ts","metaAnalysis.ts","components/shared/InformationIcon.tsx","components/charts/StudyDetailsModal.tsx","components/charts/ReferencesTable.tsx","constants.ts","components/charts/Charts.tsx","components/map/Legend.tsx","components/map/Map.tsx","components/CenterComponent.tsx","components/sidebar/right-sidebar/Filters.tsx","components/sidebar/left-sidebar/TotalStats.tsx","components/sidebar/left-sidebar/CountryList.tsx","components/mobile/MobileComponents.tsx","components/sidebar/left-sidebar/LeftSidebar.tsx","components/sidebar/right-sidebar/LastUpdated.tsx","components/sidebar/right-sidebar/RightSidebar.tsx","components/pages/Data.tsx","components/static/About.tsx","components/static/Home.tsx","httpClient.ts","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","AppContext","createContext","getEmptyFilters","source_type","Set","study_status","test_type","country","population_group","sex","age","risk_of_bias","isotypes_reported","add","initialState","healthcheck","airtable_records","filtered_records","filters","filter_options","data_page_state","mapOpen","updated_at","filterRecords","records","filter_function","record","filter_key","size","Array","isArray","match","forEach","item","includes","in_filter","i","length","has","buildFilterFunction","filter","getFilterOptions","seroprevalence","denominator","isotype_reported","AggregationFactor","reducer","state","action","new_filters","type","payload","filter_type","filter_value","AppContextProvider","props","useReducer","dispatch","Provider","value","children","transformPrevalence","p","N","method","Math","log","asin","sqrt","n","transformVariance","backTransform","t","exp","sin","sign","cos","aggregateRecords","total_positive","total_tested","filteredRecords","n_studies","pooled_p","error","pooled_var","var_sum","inv_var_sum","p_over_var_sum","inv_n_sum","prevalence","variance","conf_inter","overall_n","aggregatedRecord","num_studies","name","getAggregateData","aggregation_factor","grouped_records","aggregationString","toString","groupRecords","group","aggregate_data","result","push","InformationIcon","color","tooltip","tooltipHeader","offset","position","popupSize","className","Popup","key","random","popperModifiers","preventOverflow","boundariesElement","trigger","icon","faInfoCircle","Header","Content","StudyDetailsModal","useState","open","setOpen","getPossibleNullString","nullString","undefined","getPossibleNullStringArray","join","source_name","first_author","lead_org","publish_date","publisher","url","summary","study_type","city","sampling_method","sampling_end_date","sampling_start_date","sensitivity","specificity","manufacturer","approving_regulator","Modal","centered","closeOnEscape","closeOnDimmerClick","onClose","style","marginTop","marginLeft","marginRight","top","left","height","Button","onClick","padding","faTimes","Description","to","toFixed","ReferencesTable","useContext","activePage","setActivePage","boundaryRange","siblingRange","totalPages","setTotalPages","pageLength","setPageLength","column","setColumn","direction","setDirection","data","setData","pageLengthOptions","text","isMobileDevice","useMediaQuery","maxDeviceWidth","useEffect","newData","_","orderBy","o","splicedData","splice","ceil","buildHeaderCell","sortColumn","displayName","Table","HeaderCell","sorted","clickedColumn","celled","sortable","fixed","striped","Row","Body","map","Cell","href","target","rel","getGeography","displaySex","displayAge","getPopulation","Footer","Pagination","onPageChange","e","event","Dropdown","inline","options","defaultValue","onChange","Charts","yAxisSelection","setYAxis","aggregatedRecords","setRecords","yAxisOptions","reAggregatedRecords","chartData","sortBy","reverse","CustomTooltip","active","label","recordError","find","isMobileDeviceOrTablet","placeholder","fluid","selection","width","layout","strokeDasharray","right","dataKey","longestWord","getYAxisWidth","content","fill","maxBarSize","x","y","index","errorBarWidth","textAnchor","dominantBaseline","strokeWidth","Legend","useLeaflet","buckets","getColor","legend","control","L","onAdd","div","DomUtil","create","isNaN","title","ReactDOMServer","renderToString","labels","from","background","innerHTML","addTo","removeControl","Map","mapRef","createRef","geoJsonRef","Countries","mapRecords","setMapRecords","forceUpdate","setForceUpdate","colors","prevalenceCountryDict","reduce","a","importGeo","features","feature","properties","logit","maxSeroprevalence","max","apply","step","percentage","decimal","getLogit","logitStep","parseFloat","getBuckets","d","bounds","latLngBounds","maxBounds","ref","center","zoom","bounceAtZoomLimits","minZoom","enableHighAccuracy","maxBoundsViscosity","TileLayer","attribution","tileSize","id","zoomOffset","GeoJSON","onEachFeature","layer","bindPopup","createPopup","closeButton","autoPan","on","mouseover","openPopup","setStyle","weight","dashArray","fillOpacity","zIndex","bringToFront","highlightFeature","mouseout","closePopup","opacity","resetHighlight","mousemove","getPopup","setLatLng","latlng","click","current","leafletElement","fitBounds","getBounds","zoomToFeature","fillColor","CentralPiece","getClass","shouldHighlight","Filters","formatOptions","formatted_options","buildSectionHeader","header_text","tooltip_text","tooltip_header","buildFilterDropdown","multiple","search","addFilter","TotalStats","countries","self","indexOf","CountryList","aggregatedData","MobileComponents","showMobileFilters","setShowFilters","showSummary","setShowSummary","handleFilterToggle","showMobile","Sidebar","Pushable","as","Segment","Menu","animation","vertical","visible","fontWeight","Pusher","faFilter","faBars","LeftSidebar","LastUpdated","RightSidebar","Dashboard","About","renderBioBlock","description","line","src","alt","Data","renderPane","Tab","Pane","panes","menuItem","render","httpClient","url_full","process","fetch","res","status","json","response_json","this","httpGet","response","SOURCE_NAME","LEAD_ORG","FIRST_AUTHOR","SOURCE_TYPE","STUDY_STATUS","STUDY_TYPE","TEST_TYPE","ISOTYPES","MANUFACTURER","APPROVAL","SENSITIVITY","SPECIFICITY","PUB_DATE","PUBLISHER","COUNTRY","STATE","CITY","POPULATION_GROUP","SEX","AGE","DENOMINATOR","SUMMARY","SERUM_POS_PREVALENCE","sample_size","SAMPLE_SIZE","SAMPLING","SAMPLING_START","SAMPLING_END","OVERALL_RISK_OF_BIAS","URL","updated_at_words","split","updated_at_string","App","tab","setTab","api","getAirtableRecords","location","useLocation","pathname","usePageViews","getTabClass","tabName","Icon","path","exact","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.2c9e8730.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/two-tone-light.59be83b8.svg\";","import React, { createContext, Dispatch, useReducer } from \"react\";\nimport { AirtableRecord, Filters, State } from \"./types\";\n\nexport const AppContext = createContext({} as [State, Dispatch<Record<string, any>>]);\n\nexport function getEmptyFilters(): Filters{\n  return {\n      source_type: new Set(),\n      study_status: new Set(),\n      test_type: new Set(),\n      country: new Set(),\n      population_group: new Set(),\n      sex: new Set(),\n      age: new Set(),\n      risk_of_bias: new Set(),\n      isotypes_reported: new Set()\n  }\n}\n\n// Note: filters = elements that user has chosen to filter by\n// filter_options = all the elements that users could filter by\nconst initial_filters: Filters = getEmptyFilters();\ninitial_filters.population_group.add(['General population']);\nconst initialState: State = {\n  healthcheck: '',\n  airtable_records: [],\n  filtered_records: [],\n  filters: getEmptyFilters(),\n  filter_options: getEmptyFilters(),\n  data_page_state: {\n    mapOpen: true\n  },\n  updated_at: ''\n};\n\nfunction buildFilterFunction(filters: Record<string, any>) {\n  // Returns a function that can be used to filter an array of airtable records\n  return (record: Record<string, any>) => {\n    for (const filter_key in filters) {\n      if ((filters[filter_key] instanceof Set) && (filters[filter_key].size > 0)) {\n        if (record[filter_key] === null) {\n          return false;\n        }\n        // Handle case where field to be filtered is an array\n        if (Array.isArray(record[filter_key])) {\n          // Note: isotypes filter works on an 'and' basis\n          // Unlike other filters, which work on an 'or' basis\n          // TODO: make logic flow here more generalized in case we need other filters in the future with similar behaviour\n          if(filter_key === 'isotypes_reported'){\n            let match = true;\n            filters[filter_key].forEach((item: string) => {\n              if(!(record[filter_key].includes(item))){\n                match = false;\n              }\n            });\n            return match;\n          }\n          // Iterate through the record's values and check if any of them\n          // match the values accepted by the filter\n          let in_filter = false;\n          for (let i = 0; i < record[filter_key].length; i++) {\n            if (filters[filter_key].has(record[filter_key][i])) {\n              in_filter = true;\n              break;\n            }\n          }\n          if (!in_filter) {\n            return false;\n          }\n        }\n        else {\n          if (!(filters[filter_key].has(record[filter_key]))) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n}\n\nexport function filterRecords(filters: Filters, records: AirtableRecord[]) {\n  const filter_function = buildFilterFunction(filters);\n  if (records) {\n    const filtered_records = records.filter(filter_function);\n    return filtered_records;\n  }\n  return [];\n\n}\n\nfunction getFilterOptions(records: AirtableRecord[]) {\n  const filter_options: Filters = getEmptyFilters();\n\n  if (!records) {\n    return filter_options;\n  }\n  records.forEach((record: AirtableRecord) => {\n    // TODO: Refactor to be more DRY\n    if ((record.seroprevalence !== null) && (record.denominator !== null)) {\n      if (record.country) {\n        filter_options.country.add(record.country);\n      }\n      if (record.study_status) {\n        filter_options.study_status.add(record.study_status);\n      }\n      if(record.source_type) {\n        filter_options.source_type.add(record.source_type);\n      }\n      if(record.sex) {\n        filter_options.sex.add(record.sex);\n      }\n      if(record.risk_of_bias) {\n        filter_options.risk_of_bias.add(record.risk_of_bias);\n      }\n      if(record.test_type) {\n        record.test_type.forEach((test_type) => {\n          filter_options.test_type.add(test_type);\n        })\n      }\n      if(record.population_group){\n        record.population_group.forEach((population_group) => {\n          filter_options.population_group.add(population_group);\n        });\n      }\n      if(record.age){\n        record.age.forEach((age) => {\n          filter_options.age.add(age);\n        });\n      }\n      if(record.isotypes_reported){\n        record.isotypes_reported.forEach((isotype_reported) => {\n          if(isotype_reported !== 'Not reported'){\n            filter_options.isotypes_reported.add(isotype_reported);\n          }\n        });\n      }\n    }\n  });\n\n  return filter_options;\n}\n\nconst reducer = (state: State, action: Record<string, any>) => {\n  const new_filters: any = state.filters;\n  switch (action.type) {\n    case \"HEALTHCHECK\":\n      return {\n        ...state,\n        healthcheck: action.payload\n      };\n    case \"SELECT_DATA_TAB\":\n      return {\n        ...state,\n        data_page_state: { ...state.data_page_state, mapOpen: action.payload }\n      }\n    case \"GET_AIRTABLE_RECORDS\":\n      return {\n        ...state,\n        airtable_records: action.payload.airtable_records,\n        filtered_records: filterRecords(state.filters, action.payload.airtable_records),\n        updated_at: action.payload.updated_at,\n        filter_options: getFilterOptions(action.payload.airtable_records)\n      }\n    case \"UPDATE_FILTER\":\n      new_filters[action.payload.filter_type] = new Set(action.payload.filter_value)\n      return {\n        ...state,\n        filters: new_filters,\n        filtered_records: filterRecords(new_filters, state.airtable_records)\n      }\n    default:\n      return state\n  }\n};\n\nexport const AppContextProvider = (props: Record<string, any>) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <AppContext.Provider\n      value={[state, dispatch]}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};","\nexport type AirtableRecord = {\n    source_name: string | null,\n    lead_org?: string | null,\n    first_author?: string | null,\n    source_type: string | null,\n    study_status: string | null,\n    test_type: string[] | null,\n    isotypes_reported: string[] | null,\n    manufacturer?: string | null,\n    approving_regulator?: string | null,\n    sensitivity?: number | null,\n    specificity?: number | null,\n    country: string | null,\n    state?: string[] | null,\n    city?: string[] | null,\n    population_group: string[] | null,\n    sex: string | null,\n    age: string[] | null,\n    denominator: number | null,\n    seroprevalence: number | null,\n    publish_date?: string | null,\n    publisher?: string | null,\n    risk_of_bias: string | null,\n    study_type?: string | null,\n    sample_size?: string | null,\n    sampling_method?: string | null,\n    sampling_start_date?: string | null,\n    sampling_end_date?: string | null,\n    summary?: string | null,\n    url?: string | null,\n};\n\nexport type AggregatedRecord = {\n    error: number[];\n    n: number;\n    name: string;\n    num_studies: number;\n    seroprevalence: number;\n}\n\n// Each filter will be a javascript set\n// TODO: find typing to represent sets\nexport type Filters = {\n    source_type: any,\n    study_status: any,\n    test_type: any,\n    country: any,\n    population_group: any,\n    sex: any,\n    age: any,\n    risk_of_bias: any,\n    isotypes_reported: any\n};\n\nexport type FilterType =  'country' | 'population_group' | 'sex' | 'age' | 'study_status' | 'test_type' | 'source_type' | 'risk_of_bias' | 'isotypes_reported';\n\nexport type State = {\n    healthcheck: string,\n    airtable_records: AirtableRecord[],\n    filtered_records: AirtableRecord[],\n    filters: Filters,\n    filter_options: Filters,\n    updated_at: string,\n    data_page_state: DataPageState\n};\n\nexport enum AggregationFactor {\n    country = 'country',\n    population_group = 'population_group'\n}\n\nexport type DataPageState = {\n    mapOpen: boolean\n}\n\nexport type CustomMatcherResult = {\n    pass: boolean\n    message: string \n}\n","import { AirtableRecord, AggregationFactor, AggregatedRecord } from \"./types\"\n\nconst Z_SCORE: number = 1.96;\nexport const MIN_DENOMINATOR: number = 150;\n\nfunction transformPrevalence (p: number, N: number, method: string){\n    switch(method as any) {\n        case \"inverse_variance\": {\n            return p; \n        }\n        case \"logit\": {\n            return Math.log(p / (1 - p))\n        }\n        case \"arcsin\": {\n            return Math.asin(Math.sqrt(p))\n        }\n        case \"double_arcsin\": {\n            const n = N * p\n            return (Math.asin(Math.sqrt(n / (N + 1))) + Math.asin(Math.sqrt((n + 1) / (N + 1))) )\n        }\n        case \"double_arcsin_RSM\": {\n            const n = N * p\n            return 0.5 * (Math.asin(Math.sqrt(n / (N + 1))) + Math.asin(Math.sqrt((n + 1) / (N + 1))) )\n        }\n    }\n}\n\nfunction transformVariance(p: number, N: number, method: string){\n    switch(method as any){\n        case \"inverse_variance\": {\n            return p * (1 - p) / N; \n        }\n        case \"logit\": {\n            return 1 / (N * p) + 1 / (N * (1 - p));\n        }\n        case \"arcsin\": {\n            return 1 / (4 * N)\n        }\n        case \"double_arcsin\": {\n            return 1 / (N + 0.5)\n        }\n        case \"double_arcsin_RSM\": {\n            return 1 / (4 * N + 2)\n        }\n    }\n}\n\nfunction backTransform(t: number, n: number, method: string){\n    switch(method as any){\n        case \"inverse_variance\": {\n            return t;\n        }\n        case \"logit\": {\n            return Math.exp(t) / (Math.exp(t) + 1);\n        }\n        case \"arcsin\": {\n            return Math.sin(t) ** 2\n        }\n        case \"double_arcsin\": {\n            return Math.sin(t / 2) ** 2\n        }\n        case \"double_arcsin_RSM\": {\n            return 0.5 * (1 - Math.sign(Math.cos(t)) \n            * Math.sqrt(1 - (Math.sin(2 * t) + (Math.sin(2 * t) - 2 * Math.sin(2 * t)) / n) ** 2))\n        }\n    }\n}\n\nexport function aggregateRecords(records: AirtableRecord[], method: string = \"double_arcsin_RSM\") {\n    let total_positive = 0;\n    let total_tested = 0;\n\n    const filteredRecords = records.filter(record => ((record.seroprevalence !== null) && (record.denominator !== null && record.denominator >= MIN_DENOMINATOR)));\n    const n_studies = filteredRecords.length;\n\n    let pooled_p: number = 0;\n    let error: number[] = [0, 0];\n\n    if (method === \"naive_pooling\"){\n        filteredRecords.forEach((record: AirtableRecord) => {\n            total_positive += (record.seroprevalence as number) * (record.denominator as number);\n            total_tested += (record.denominator as number);\n        });\n\n        pooled_p = total_positive / total_tested;\n\n        const pooled_var = ((pooled_p) * (1 - pooled_p)) / total_tested;\n        error = [Z_SCORE * Math.sqrt(pooled_var), Z_SCORE * Math.sqrt(pooled_var)];\n    } else {\n        let var_sum = 0;\n        let inv_var_sum = 0;\n        let p_over_var_sum = 0;\n        let inv_n_sum = 0;\n        let prevalence = 0;\n        let variance = 0;\n\n        \n        filteredRecords.forEach((record: AirtableRecord) => {\n            if ((record.seroprevalence !== null) && (record.denominator !== null) && (record.seroprevalence !== 0) && (record.denominator !== 0)) {\n                prevalence = transformPrevalence(record.seroprevalence, record.denominator, method)!;\n                variance = transformVariance(record.seroprevalence, record.denominator, method)!;\n                var_sum = var_sum + variance;\n                inv_var_sum = inv_var_sum + (1 / variance);\n                p_over_var_sum = p_over_var_sum + (prevalence / variance);\n                total_tested = total_tested + record.denominator;\n                inv_n_sum = inv_n_sum + 1 / record.denominator;\n            }\n        });\n\n        pooled_p = p_over_var_sum / inv_var_sum;\n        const conf_inter = [pooled_p - Z_SCORE * Math.sqrt(var_sum), pooled_p + Z_SCORE * Math.sqrt(var_sum)]\n\n        const overall_n = 1 / (inv_n_sum / n_studies)\n\n        pooled_p = backTransform(pooled_p, overall_n, method)!; \n        error = [pooled_p - backTransform(conf_inter[0], overall_n, method)!, backTransform(conf_inter[1], overall_n, method)! - pooled_p];\n    }\n\n    if (pooled_p - error[0] < 0) {error[0] = pooled_p}\n    if (pooled_p + error[1] > 1) {error[1] = 1 - pooled_p}\n    \n    const aggregatedRecord: AggregatedRecord = {\n        seroprevalence: pooled_p * 100,\n        error: [error[0] * 100, error[1] * 100],\n        n: total_tested,\n        num_studies: n_studies,\n        name: \"\"\n    }\n    return aggregatedRecord\n}\n\n// Given an aggregation factor (either 'country' or 'populations')\n// get pooled seroprevalence, error bounds, and n (total number of tests) for each country or population\nexport function getAggregateData(records: AirtableRecord[], aggregation_factor: AggregationFactor) {\n    const grouped_records: Record<string, AirtableRecord[]> = {}\n    const aggregationString: string = aggregation_factor.toString();\n    records.forEach((record: AirtableRecord) => {\n        if ((record.seroprevalence !== null) && (record.denominator !== null) && (record[aggregationString as \"country\" | \"population_group\"] != null)) {\n            if (aggregationString === 'country') {\n                groupRecords(grouped_records, record, record.country!)\n            }\n            else {\n                record.population_group!.forEach((group) => {\n                    groupRecords(grouped_records, record, group)\n                })\n            }\n        }\n    });\n\n\n    const aggregate_data: AggregatedRecord[] = []\n\n    for (const name in grouped_records) {\n        const result = aggregateRecords(grouped_records[name]);\n        aggregate_data.push({ ...result, name });\n    }\n    return aggregate_data;\n}\n\nfunction groupRecords(grouped_records: Record<string, AirtableRecord[]>, record: AirtableRecord, group: string) {\n    if (group in grouped_records) {\n        grouped_records[group].push(record);\n    }\n    else {\n        grouped_records[group] = [record];\n    }\n}\n","import { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\ninterface InformationIconProps {\r\n  color: string;\r\n  size: \"xs\" | \"lg\" | \"sm\" | \"1x\" | \"2x\" | \"3x\" | \"4x\" | \"5x\" | \"6x\" | \"7x\" | \"8x\" | \"9x\" | \"10x\" | undefined,\r\n  position?: \"top left\" | \"top right\" | \"bottom right\" | \"bottom left\" | \"right center\" | \"left center\" | \"top center\" | \"bottom center\" | undefined,\r\n  tooltip: string | React.ReactNode;\r\n  tooltipHeader?: string;\r\n  offset: string | number;\r\n  popupSize?: \"mini\" | \"tiny\" | \"small\" | \"large\" | \"huge\";\r\n}\r\n\r\nexport default function InformationIcon(props: InformationIconProps) {\r\n  const { color, size, tooltip, tooltipHeader, offset, position, popupSize=\"small\" } = props;\r\n  return (\r\n    <div className=\"px-2\">\r\n      <Popup\r\n        key={Math.random()}\r\n        offset={offset}\r\n        position={position}\r\n        size={popupSize}\r\n        //fix for janky popup positioning due to overflow styling\r\n        popperModifiers={{ preventOverflow: { boundariesElement: \"window\" } }}\r\n        trigger={\r\n          <FontAwesomeIcon\r\n            icon={faInfoCircle}\r\n            color={color}\r\n            size={size} />}>\r\n        {tooltipHeader && (\r\n          <Popup.Header className=\"flex left\">{tooltipHeader}</Popup.Header>\r\n        )}\r\n        <Popup.Content className=\"flex left\">{tooltip}</Popup.Content>\r\n      </Popup>\r\n    </div>\r\n  );\r\n}\r\n","import { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Modal } from \"semantic-ui-react\";\r\nimport { AirtableRecord } from \"../../types\";\r\nimport \"./StudyDetailsModal.css\";\r\n\r\n// TODO: Extract this into a modal service \r\n\r\ninterface StudyDetailsModalProps {\r\n  record: AirtableRecord\r\n}\r\nexport default function StudyDetailsModal(props: StudyDetailsModalProps) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const inlineStyle = {\r\n    modal: {\r\n      marginTop: '0px !important',\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n      top: 'auto',\r\n      left: 'auto',\r\n      height: 'auto'\r\n    }\r\n  };\r\n\r\n  const getPossibleNullString = (nullString: string | number | null | undefined) => {\r\n    if (nullString === null || nullString === undefined) {\r\n      return \"Not Reported\"\r\n    }\r\n    return nullString\r\n  }\r\n\r\n  const getPossibleNullStringArray = (nullString: string[] | null | undefined) => {\r\n    if (nullString === null || nullString === undefined) {\r\n      return \"Not Reported\"\r\n    }\r\n    return nullString.join(\", \")\r\n  }\r\n\r\n  const {\r\n    source_name, first_author, lead_org, publish_date, publisher, url,\r\n    summary, study_status, study_type,\r\n    population_group, age, city, state, country, sex,\r\n    seroprevalence, risk_of_bias, denominator,\r\n    sampling_method, sampling_end_date, sampling_start_date,\r\n    test_type, sensitivity, specificity, isotypes_reported, manufacturer, approving_regulator\r\n  } = props.record\r\n  return (\r\n    <Modal\r\n      centered={true}\r\n      size=\"large\"\r\n      closeOnEscape={true}\r\n      closeOnDimmerClick={true}\r\n      onClose={() => {setOpen(false)}}\r\n      open={open}\r\n      style={inlineStyle.modal}\r\n      trigger={\r\n        <Button onClick={() => setOpen(true)} style={{ padding: '8px' }}>\r\n          Details\r\n      </Button>}>\r\n      <Modal.Header>Prevalence Estimate Details\r\n        <FontAwesomeIcon onClick={() => setOpen(false)} icon={faTimes} size={\"sm\"} className=\"float-right cursor\" />\r\n      </Modal.Header>\r\n      <Modal.Content>\r\n        <Modal.Description>\r\n          <div className=\"col-12 p-0 flex\">\r\n            <div className=\"col-12 px-0 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">SOURCE</div>\r\n              <div className=\"col-12 px-2 py-1 section-container modal-text-container\">\r\n                <Link to={url || \"\"} className=\"col-12 p-0 name-text\">\r\n                  {source_name}\r\n                </Link>\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  {`By ${first_author} `}{lead_org ? `at ${lead_org}` : \"\"}\r\n                </div>\r\n                <div className=\"col-12 p-0 tertiary-text\">\r\n                  {publish_date ? `Published ${publish_date} ` : \"\"}{publisher ? `by ${publisher}` : \"\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 px-0 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">STUDY</div>\r\n              <div className=\"col-12 px-2 py-1 flex section-container modal-text-container\">\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">Summary: </span>\r\n                    {getPossibleNullString(summary)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">Status: </span>{getPossibleNullString(study_status)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">Study Type: </span>{getPossibleNullString(study_type)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 px-0 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">DEMOGRAPHICS</div>\r\n              <div className=\"col-12 px-2 py-1 flex section-container modal-text-container\">\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">Population: </span>{getPossibleNullStringArray(population_group)}\r\n                </div>\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">Age Group: </span>{getPossibleNullStringArray(age)}\r\n                </div>\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <span>\r\n                    <span className=\"secondary-title\">Location: </span>{city ? `${city.join(\", \")}, ` : \"\"}{state ? `${state.join(\", \")}, ` : \"\"}{country ? country : \"\"}\r\n                  </span>\r\n                </div>\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">Sex: </span>{getPossibleNullString(sex)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-6 pl-0 pr-2 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">PREVALENCE</div>\r\n              <div className=\"col-12 px-2 py-1 flex section-container modal-text-container\">\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">Prevalence: </span>{seroprevalence ? (seroprevalence * 100).toFixed(2) : \"Not Reported\"}%\r\n                </div>\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">Sample Size: </span>{getPossibleNullString(denominator)}\r\n                </div>\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">Risk of Bias: </span>{getPossibleNullString(risk_of_bias)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-6 pl-2 pr-0 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">SAMPLING</div>\r\n              <div className=\"col-12 px-2 py-1 flex section-container modal-text-container\">\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">Sampling Method: </span>{getPossibleNullString(sampling_method)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">Start Date: </span>{getPossibleNullString(sampling_start_date)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">End Date: </span>{getPossibleNullString(sampling_end_date)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 px-0 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">TEST DETAILS</div>\r\n              <div className=\"col-12 px-2 py-1 flex section-container modal-text-container\">\r\n                <div className=\"col-6 p-0\">\r\n                  <div className=\"col-12 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">Manufacturer: </span>{getPossibleNullString(manufacturer)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">Test Used: </span>{getPossibleNullStringArray(test_type)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">Isotypes: </span>{getPossibleNullStringArray(isotypes_reported)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6 p-0\">\r\n                  <div className=\"col-12 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">Specificity: </span>{specificity ? `${(specificity * 100).toFixed(2)}%` : \"Not Reported\"}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">Sensitivity: </span>{sensitivity ? `${(sensitivity * 100).toFixed(2)}%` : \"Not Reported\"}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-126 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">Regulatory Approval: </span>{getPossibleNullString(approving_regulator)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n    </Modal >\r\n  )\r\n} ","import _ from 'lodash';\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Dropdown, DropdownProps, Pagination, Table } from \"semantic-ui-react\";\r\nimport { AppContext } from \"../../context\";\r\nimport './Charts.css';\r\nimport StudyDetailsModal from './StudyDetailsModal';\r\nimport { mobileDeviceWidth } from '../../constants';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nexport default function ReferencesTable() {\r\n  const [state] = useContext(AppContext);\r\n  const [activePage, setActivePage] = useState(1);\r\n  const [boundaryRange] = useState(1);\r\n  const [siblingRange] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(10);\r\n  const [pageLength, setPageLength] = useState(5);\r\n  const [column, setColumn] = useState('denominator');\r\n  const [direction, setDirection] = useState('descending');\r\n  const [data, setData] = useState(state.filtered_records);\r\n\r\n  const handlePaginationChange = (e: any, event: any) => {\r\n    const { activePage } = event;\r\n    setActivePage(activePage)\r\n  }\r\n\r\n  const handlePageLengthChange = (e: any, event: DropdownProps) => {\r\n    setPageLength(event.value as number);\r\n    setActivePage(1);\r\n  }\r\n\r\n  const pageLengthOptions = [\r\n    { text: 5, value: 5 }, { text: 10, value: 10 }, { text: 25, value: 25 }, { text: 50, value: 50 }, { text: 100, value: 100 }\r\n  ]\r\n\r\n  const handleSort = (clickedColumn: string) => () => {\r\n    if (column !== clickedColumn) {\r\n\r\n      setActivePage(1);\r\n      setColumn(clickedColumn);\r\n      setDirection('ascending');\r\n      return\r\n    }\r\n    else {\r\n      setDirection(direction === 'ascending' ? 'descending' : 'ascending');\r\n    }\r\n  }\r\n  \r\n  const isMobileDevice = useMediaQuery({ maxDeviceWidth: mobileDeviceWidth })\r\n\r\n  useEffect(() => {\r\n    let newData = _.orderBy(state.filtered_records, [column], ['asc']);\r\n\r\n    if (direction === 'descending') {\r\n      newData = _.orderBy(state.filtered_records, [(o: any) => { return o[column] || '' }], ['desc']);\r\n    }\r\n\r\n    const splicedData = newData.splice((activePage - 1) * pageLength, pageLength);\r\n    setData(splicedData);\r\n\r\n    if (isMobileDevice) {\r\n      setPageLength(Math.ceil(state.filtered_records.length))\r\n    }\r\n    else {\r\n      setTotalPages(Math.ceil(state.filtered_records.length / pageLength));\r\n    }\r\n  }, [activePage, column, direction, isMobileDevice, pageLength, state.filtered_records])\r\n\r\n  const buildHeaderCell = (sortColumn: string, displayName: string, className: string) => {\r\n    return (\r\n      <Table.HeaderCell\r\n        className={className}\r\n        sorted={column === sortColumn ? direction as any : null}\r\n        onClick={handleSort(sortColumn)}\r\n      >\r\n        {displayName}\r\n      </Table.HeaderCell>)\r\n\r\n  }\r\n\r\n  const getPopulation = (sex: string | null, age: string[] | null, population_group: string[] | null) => {\r\n    if (!population_group) {\r\n      return \"Not Reported\";\r\n    }\r\n    const displaySex = sex && sex !== \"All\" && sex !== \"Unspecified\";\r\n    const displayAge = age && age[0] !== \"All\" && age[0] !== \"Unspecified\";\r\n    return `${displaySex ? `${sex}, ` : \"\"}${displayAge ? `${(age as string[]).join(\", \")}, ` : \"\"}${population_group.join(\", \")}`;\r\n  }\r\n\r\n  const getGeography = (city: string[] | null | undefined, state: string[] | null | undefined, country: string | null) => {\r\n    if (!country) {\r\n      return \"Not Reported\";\r\n    }\r\n    return `${city ? `${city.join(\", \")}, ` : \"\"}${state ? `${state.join(\", \")}, ` : \"\"}${country}`;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container col-11 m-4 center-item flex\">\r\n      <div className=\"col-12 px-0 py-3 section-title\">\r\n        REFERENCES\r\n      </div>\r\n      <Table celled sortable fixed striped className=\"table mb-3 mt-0\">\r\n        <Table.Header className=\"flex col-12 p-0\">\r\n          <Table.Row className=\"flex col-12 p-0\">\r\n            {buildHeaderCell('title', 'Name', 'col-sm-12 col-lg-3 p-1')}\r\n            {buildHeaderCell('country', 'Geography', 'col-sm-12 col-lg-2 p-1')}\r\n            {buildHeaderCell('populations', 'Populations', 'col-sm-12 col-lg-2 p-1')}\r\n            {buildHeaderCell('denominator', 'N', 'col-sm-12 col-lg-1 p-1')}\r\n            {buildHeaderCell('seroprevalence', 'Prevalence', 'col-sm-12 col-lg-1 p-1')}\r\n            {buildHeaderCell('risk_of_bias', 'Risk Of Bias', 'col-sm-12 col-lg-2 p-1')}\r\n            {buildHeaderCell('', 'Details', 'col-sm-12 col-lg-1 p-1')}\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body className=\"col-12 p-0\">\r\n          {_.map(data,\r\n            (record) => {\r\n              const {\r\n                source_name, source_type, url,\r\n                country, state, city,\r\n                denominator,\r\n                sex, age, population_group,\r\n                seroprevalence,\r\n                risk_of_bias,\r\n              } = record\r\n              return (\r\n                <Table.Row className=\"flex col-12 p-0\" key={Math.random()}>\r\n                  <Table.Cell className=\" col-sm-12 col-lg-3 p-1\">\r\n                    <a href={url ? url : '#'} target=\"_blank\" rel=\"noopener noreferrer\">{source_name}</a>\r\n                    <i className=\"px-1\">({source_type})</i>\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-2 p-1\">{getGeography(city, state, country)}</Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-2 p-1\">{getPopulation(sex, age, population_group)}</Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-1 p-1\">{denominator ? denominator : \"Not Reported\"}</Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-1 p-1\">{seroprevalence ? `${(seroprevalence * 100).toFixed(2)}%` : \"Not Reported\"}</Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-2 p-1\">{risk_of_bias ? risk_of_bias : \"Not Reported\"}</Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-1 p-0 center-item\"><StudyDetailsModal record={record} /></Table.Cell>\r\n                </Table.Row>\r\n              )\r\n            })}\r\n        </Table.Body>\r\n        {\r\n          !isMobileDevice ?\r\n            <Table.Footer className=\"flex space-between\">\r\n              <Pagination\r\n                activePage={activePage}\r\n                boundaryRange={boundaryRange}\r\n                onPageChange={handlePaginationChange}\r\n                size='mini'\r\n                siblingRange={siblingRange}\r\n                totalPages={totalPages}\r\n              />\r\n              <div className=\"p-2 flex\">\r\n                <Dropdown inline\r\n                  options={pageLengthOptions}\r\n                  defaultValue={pageLengthOptions[0].value}\r\n                  onChange={handlePageLengthChange} />\r\n                <div className=\"px-2\">\r\n                  studies per page\r\n              </div>\r\n              </div>\r\n            </Table.Footer> :\r\n            null\r\n        }\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n","export const mobileDeviceOrTabletWidth = 1200;\r\nexport const mobileDeviceWidth = 600;","import _ from \"lodash\";\r\nimport React, { SyntheticEvent, useContext, useEffect, useState } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Bar, BarChart, CartesianGrid, ErrorBar, LabelList, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { Dropdown, DropdownProps } from \"semantic-ui-react\";\r\nimport { mobileDeviceOrTabletWidth } from \"../../constants\";\r\nimport { AppContext } from \"../../context\";\r\nimport { getAggregateData } from \"../../metaAnalysis\";\r\nimport { AggregationFactor } from \"../../types\";\r\nimport InformationIcon from \"../shared/InformationIcon\";\r\nimport './Charts.css';\r\nimport ReferencesTable from \"./ReferencesTable\";\r\n\r\nexport default function Charts() {\r\n  const [yAxisSelection, setYAxis] = useState(AggregationFactor.country);\r\n  const [state] = useContext(AppContext);\r\n  const { filtered_records } = state;\r\n  const aggregatedRecords = getAggregateData(filtered_records, yAxisSelection);\r\n  const [records, setRecords] = useState(aggregatedRecords);\r\n\r\n  const yAxisOptions = [\r\n    { key: 'Population', text: 'Population', value: AggregationFactor.population_group },\r\n    { key: 'Geographies', text: 'Geographies', value: AggregationFactor.country }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    const reAggregatedRecords = getAggregateData(filtered_records, yAxisSelection);\r\n    const chartData = _.sortBy(reAggregatedRecords, 'seroprevalence').reverse();\r\n    setRecords(chartData);\r\n  }, [yAxisSelection, state, filtered_records])\r\n\r\n  const handleChange = (event: SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => {\r\n    setYAxis(data.value as AggregationFactor);\r\n  }\r\n\r\n  const CustomTooltip = (e: any) => {\r\n    const { active, payload, label } = e\r\n    if (active && payload) {\r\n      const seroprevalence = payload[0].value;\r\n      const recordError = records.find(o => o.name === label)?.error || [0, 0];\r\n      return (\r\n        <div className=\"col flex popup\">\r\n          <div className=\"col-12 p-0 popup-header\">{label}</div>\r\n          <div className=\"col-12 p-0 popup-content\">Seroprevalence: {seroprevalence.toFixed(2)}%</div>\r\n          <div className=\"col-12 p-0 popup-content\">95% Confidence Interval:  {(seroprevalence - recordError[0]).toFixed(2)}%-{(seroprevalence + recordError[1]).toFixed(2)}%</div>\r\n          <div className=\"col-12 p-0 popup-content\">Total Tests: {payload[0].payload.n}</div>\r\n          <div className=\"col-12 p-0 popup-content\">Total Estimates: {payload[0].payload.num_studies}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n\r\n  const renderCustomizedLabel = (props: any) => {\r\n    const { x, y, width, height, value, index } = props;\r\n    let recordError = records[index].error;\r\n    const ratio = width / value;\r\n    const error = Array.isArray(recordError) ? recordError[1] : recordError;\r\n    const errorBarWidth = ratio * error;\r\n    return (\r\n      <g>\r\n        <text x={x + width + 10 + (errorBarWidth as number)} y={y + height / 2 + 5} fill=\"#000\" textAnchor=\"right\" dominantBaseline=\"right\">\r\n          {value.toFixed(2)}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  const getYAxisWidth = (chartData: Record<string, string | number | number[]>[]) => {\r\n    let longestWord = 0;\r\n    chartData.filter(o => o.name)\r\n      .forEach(o => {\r\n        const country = o.name as string;\r\n        longestWord = country.length > longestWord ? country.length : longestWord;\r\n      })\r\n    return longestWord;\r\n  }\r\n\r\n  const isMobileDeviceOrTablet = useMediaQuery({ maxDeviceWidth: mobileDeviceOrTabletWidth })\r\n\r\n  return (\r\n    <div className=\"charts-page flex\">\r\n      <div className={isMobileDeviceOrTablet ? \"mobile-charts container col-11 center-item flex\" : \"charts container col-11 center-item flex\"}>\r\n        <div className=\"col-12 p-0 center-item flex\">\r\n          <div className=\"col-sm-1 col-lg-3\">\r\n          </div>\r\n          <div className=\"charts-title flex p-0 mt-2 p-lg-0 col-sm-8 col-lg-6\">\r\n            <div className=\"col-auto flex center-item\">\r\n              Seroprevalence by\r\n            </div>\r\n            <Dropdown\r\n              placeholder='Geographies'\r\n              fluid selection\r\n              className=\"col large-dropdown\"\r\n              onChange={handleChange}\r\n              options={yAxisOptions}\r\n            >\r\n            </Dropdown>\r\n          </div>\r\n          <div className=\"col-sm-6 col-lg-3 flex top right\">\r\n            95% CI\r\n            <InformationIcon\r\n            offset=\"10px\"\r\n            position=\"bottom right\"\r\n            color=\"#455a64\"\r\n            size=\"sm\"\r\n            tooltip={\"Wider error bars indicate greater uncertainty in the pooled seroprevalence estimate.\"}\r\n            tooltipHeader=\"95% Confidence Interval\"/>\r\n          </div>\r\n        </div>\r\n        <ResponsiveContainer width=\"100%\" height=\"80%\">\r\n          <BarChart data={records} layout='vertical'>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis type=\"number\" name=\"Seroprevalence (%)\" padding={{ left: 0, right: 30 }} />\r\n            <YAxis dataKey=\"name\" type=\"category\" width={getYAxisWidth(records) * 7} />\r\n            <Tooltip content={<CustomTooltip />} />\r\n            <Legend />\r\n            <Bar dataKey=\"seroprevalence\" name=\"Seroprevalence (%)\" fill=\"#55A6BA\" maxBarSize={60}>\r\n              <LabelList dataKey=\"seroprevalence\" position=\"right\" content={renderCustomizedLabel} />\r\n              <ErrorBar dataKey=\"error\" width={4} strokeWidth={2} />\r\n            </Bar>\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      <ReferencesTable />\r\n    </div>\r\n  );\r\n}\r\n","import L from \"leaflet\";\r\nimport React, { useEffect } from \"react\";\r\nimport ReactDOMServer from \"react-dom/server\";\r\nimport { useLeaflet } from \"react-leaflet\";\r\nimport \"./Legend.css\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { mobileDeviceOrTabletWidth } from \"../../constants\";\r\ninterface legendProps {\r\n  buckets: number[],\r\n  getColor: (d: number | null) => string\r\n}\r\n\r\nconst Legend = (props: legendProps) => {\r\n  const { map } = useLeaflet();\r\n  const buckets = props.buckets as number[]\r\n  const getColor = props.getColor;\r\n\r\n  const isMobileDeviceOrTablet = useMediaQuery({ maxDeviceWidth: mobileDeviceOrTabletWidth })\r\n  useEffect(() => {\r\n    const control = L.control as any\r\n    const legend = control({ position: \"bottomright\" });\r\n    // apparently this is not caught in the typings so I have to any it\r\n    legend.onAdd = () => {\r\n      let div = L.DomUtil.create(\"div\", \"info flex legend center-item\");\r\n\r\n      if (isMobileDeviceOrTablet) {\r\n        div = L.DomUtil.create(\"div\", \"info flex legend-mobile center-item\");\r\n      }\r\n\r\n      // Don't show the scale until we have all the data\r\n      if (isNaN(buckets[1])) {\r\n        return div\r\n      }\r\n\r\n      // Title underneath scale with tooltip\r\n      const title = ReactDOMServer.renderToString(\r\n        <h4 className=\"legend-title p-0 middle\">Seroprevalence\r\n          <span className=\"flex popup\">\r\n            <div className=\"popup-header col-12 p-0 flex left\">Seroprevalence Scale</div>\r\n            <div className=\"popup-content col-12 p-0 flex start-item left\">Made from the logit transform of the maximum value to determine the 'bins'</div>\r\n          </span>\r\n        </h4>)\r\n\r\n      const labels = buckets.map((value, index) => {\r\n        if (index !== buckets.length) {\r\n          const from = value;\r\n          const to = buckets[index + 1]\r\n          // TODO: Check into passing in an array of colours instead of the getColor function\r\n          return ReactDOMServer.renderToString(\r\n            <div className=\"bin flex\">\r\n              <div className={isMobileDeviceOrTablet ? \"col-12 mobile-text p-0\" : \"col-12 p-0\"}>\r\n          {isMobileDeviceOrTablet ? `${from}%${to ? '' : \"+\"}`:`${from}%${to ? `- ${to}%` : \"+\"}`}</div>\r\n              <i className=\"col-12 p-0\" style={{ background: getColor(from) }}></i>\r\n            </div>\r\n          )\r\n        }\r\n        return null;\r\n      })\r\n      labels.push(title);\r\n      div.innerHTML = labels.join(\"\");\r\n      return div;\r\n    };\r\n    legend.addTo(map);\r\n\r\n    return () => {\r\n      map?.removeControl(legend);\r\n    }\r\n  });\r\n\r\n  return null;\r\n};\r\n\r\nexport default Legend;\r\n","import { latLngBounds, Layer, LeafletMouseEvent } from \"leaflet\";\nimport React, { createRef, useContext, useEffect, useState } from \"react\";\nimport ReactDOMServer from 'react-dom/server';\nimport { GeoJSON, Map as LeafletMap, TileLayer } from \"react-leaflet\";\nimport Countries from \"../../assets/countries-geo.json\";\nimport { AppContext } from \"../../context\";\nimport { getAggregateData } from \"../../metaAnalysis\";\nimport { AggregatedRecord, AggregationFactor } from \"../../types\";\nimport Legend from \"./Legend\";\nimport './Map.css';\n\nexport default function Map() {\n  const mapRef = createRef<LeafletMap>();\n  const geoJsonRef = createRef<GeoJSON>();\n  const [state] = useContext(AppContext);\n  const [mapRecords, setMapRecords] = useState(Countries as any);\n  const [forceUpdate, setForceUpdate] = useState(Math.random());\n\n  const colors = [\n    '#76E57F', '#62CA7C', '#4FB079', '#3B9577', '#277A74', '#146071', '#00456E', \"#EEEEEE\"\n  ]\n\n  useEffect(() => {\n    const prevalenceCountryDict: Record<string, AggregatedRecord> = getAggregateData(state.filtered_records, AggregationFactor.country)\n      .reduce((a, x: AggregatedRecord) => ({ ...a, [x.name]: x }), {})\n\n    const importGeo = Countries as any;\n    const features = importGeo.features as GeoJSON.Feature[]\n\n    // We will iterate through all the features in the geoJson\n    // if they are in the country dict we will attach their aggregated data to the feature for displaying\n    importGeo.features = features.map(feature => {\n      const country = prevalenceCountryDict[feature?.properties?.name];\n      if (country && country.seroprevalence) {\n        const { seroprevalence, error, n, num_studies } = country;\n        return { ...feature, properties: { ...feature.properties, seroprevalence, error, n, num_studies } }\n      }\n      return { ...feature, properties: { ...feature.properties, seroprevalence: null, error: null, n: null, num_studies: null } }\n    })\n    setMapRecords(importGeo)\n\n    // we need to update the key on the GEOJSON to let react know it's time to rerender\n    setForceUpdate(Math.random())\n  }, [state.filtered_records])\n\n\n  const style = (feature: GeoJSON.Feature<GeoJSON.Geometry, any> | undefined) => {\n    return {\n      fillColor: getColor(feature?.properties?.seroprevalence),\n      weight: 1,\n      opacity: 1,\n      color: 'white',\n      dashArray: '0',\n      fillOpacity: 0.7,\n      zIndex: 650\n    }\n  }\n\n  // Abstract to utils\n  const getLogit = (percentage: number) => {\n    const decimal = percentage / 100;\n    return Math.log(decimal) - Math.log(1 - decimal);\n  }\n\n  // Abstract to utils\n  const getDecimalFromLogit = (logit: number) => {\n    return Math.exp(logit) / (Math.exp(logit) + 1) * 100\n  }\n\n  // Abstract to utils\n  const getBuckets = (features: GeoJSON.Feature[]) => {\n    // This is some javascript voodoo to get maxSeroprevalence\n    const maxSeroprevalence = Math.max.apply(Math, features.filter(o => o.properties?.seroprevalence).map((o) => o?.properties?.seroprevalence));\n    const roundedMax = Math.ceil(maxSeroprevalence);\n    const maxLogit = getLogit(roundedMax);\n\n    // This is an arbitrary value that I chose because on the logit scale\n    // as you decrease in size you approach infinity, not 0\n    const lowerEnd = -7;\n    const differenceScale = maxLogit - lowerEnd\n    const bucketSegments = 6\n    const step = differenceScale / bucketSegments;\n    const buckets = [0];\n    for (let x = 1; x <= 6; x++) {\n      const logitStep = parseFloat(getDecimalFromLogit(-7 + step * x).toFixed(1));\n      buckets.push(logitStep);\n    }\n    return buckets;\n  }\n\n  const buckets: Array<number> = getBuckets(mapRecords.features);\n\n  // TODO: abstract this to utils function\n  const getColor = (d: number | null) => {\n    if (d === null) {\n      return colors[7];\n    }\n    return d < buckets[1] ? colors[0] :\n      d < buckets[2] ? colors[1] :\n        d < buckets[3] ? colors[2] :\n          d < buckets[4] ? colors[3] :\n            d < buckets[5] ? colors[4] :\n              d < buckets[6] ? colors[5] :\n                colors[6]\n  }\n\n  const highlightFeature = (e: LeafletMouseEvent) => {\n    const layer = e.target;\n    layer.setStyle({\n      weight: 5,\n      color: '#666',\n      dashArray: '',\n      fillOpacity: 0.7,\n      zIndex: 200\n    });\n    layer.bringToFront();\n\n  }\n\n  const zoomToFeature = (e: LeafletMouseEvent) => {\n    const map = mapRef?.current?.leafletElement\n    map?.fitBounds(e.target.getBounds());\n  };\n\n  const resetHighlight = (e: LeafletMouseEvent) => {\n    const layer = e.target;\n\n    layer.setStyle({\n      weight: 2,\n      opacity: 1,\n      color: 'white',\n      dashArray: '',\n      fillOpacity: 0.7\n    });\n  };\n\n  const createPopup = (properties: any) => {\n    if (properties.seroprevalence) {\n      let error = properties?.error;\n      return (\n        <div className=\"col-12 p-0 flex\">\n          <div className=\"col-12 p-0 popup-header\">{properties.name}</div>\n          <div className=\"col-12 p-0 popup-content\">Seroprevalence: {properties?.seroprevalence.toFixed(2)}%</div>\n          <div className=\"col-12 p-0 popup-content\">95% CI: {(properties?.seroprevalence - error[0]).toFixed(2)}%-{(properties?.seroprevalence + error[1]).toFixed(2)}%</div>\n          <div className=\"col-12 p-0 popup-content\">Total Tests: {properties?.n}</div>\n          <div className=\"col-12 p-0 popup-content\">Total Estimates: {properties?.num_studies}</div>\n        </div>)\n    };\n    return (\n      <div className=\"col-12 p-0 flex\">\n        <h3 className=\"col-12 p-0 flex popup-header\">{properties.name}</h3>\n        <div className=\"col-12 p-0 flex popup-content\">No data</div>\n      </div>)\n  }\n\n\n  // This method sets all the functionality for each GeoJSON item\n  const onEachFeature = (feature: GeoJSON.Feature, layer: Layer) => {\n\n    layer.bindPopup(ReactDOMServer.renderToString(createPopup(feature.properties)), { closeButton: false, autoPan: false });\n\n    layer.on({\n      mouseover: (e: LeafletMouseEvent) => {\n        layer.openPopup();\n        highlightFeature(e)\n      },\n      mouseout: (e: LeafletMouseEvent) => {\n        layer.closePopup();\n        resetHighlight(e)\n      },\n      mousemove: (e: LeafletMouseEvent) => {\n        layer.getPopup()?.setLatLng(e.latlng);\n      },\n      click: (e: LeafletMouseEvent) => {\n        zoomToFeature(e);\n      }\n    })\n  }\n\n  const bounds = latLngBounds([-90, -200], [90, 180]);\n  const maxBounds = latLngBounds([-90, -200], [90, 200]);\n\n  const mapboxAccessToken = process.env.REACT_APP_MAPBOX_API_KEY;\n  return (\n    <LeafletMap\n      ref={mapRef}\n      center={[0, 0]}\n      zoom={2}\n      className=\"map w-100\"\n      bounceAtZoomLimits={true}\n      bounds={bounds}\n      minZoom={2}\n      maxBounds={maxBounds}\n      enableHighAccuracy={true}\n      maxBoundsViscosity={1}\n    >\n      <TileLayer\n        url={'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=' + mapboxAccessToken}\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        tileSize={512}\n        id='mapbox/light-v9'\n        zoomOffset={-1}>\n      </TileLayer>\n      <GeoJSON\n        onEachFeature={onEachFeature}\n        ref={geoJsonRef}\n        key={forceUpdate}\n        data={mapRecords as GeoJSON.GeoJsonObject}\n        style={(data) => style(data)}>\n      </GeoJSON>\n      <Legend buckets={buckets} getColor={getColor} />\n    </LeafletMap>\n  );\n}\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../context\";\r\nimport Charts from \"./charts/Charts\";\r\nimport './Component.css';\r\nimport Map from './map/Map';\r\n\r\nexport default function CentralPiece() {\r\n  const [state, dispatch] = useContext(AppContext);\r\n\r\n\r\n  const getClass = (shouldHighlight: boolean) => {\r\n    if (shouldHighlight === state.data_page_state.mapOpen) {\r\n      return 'center-highlighted'\r\n    }\r\n    return 'center-regular'\r\n  }\r\n\r\n  const displayCenter = () => {\r\n    return state.data_page_state.mapOpen ? <Map /> : <Charts />\r\n  }\r\n  return (\r\n    <div className=\"col-12 p-0\">\r\n      <div className=\"center-button flex\">\r\n        <div className={`center-item left-button ${getClass(true)}`} onClick={() =>\r\n          dispatch({\r\n            type: 'SELECT_DATA_TAB',\r\n            payload: true\r\n          })}>\r\n          Explore\r\n          </div>\r\n        <div className={`right-button ${getClass(false)}`} onClick={() =>\r\n          dispatch({\r\n            type: 'SELECT_DATA_TAB',\r\n            payload: false\r\n          })}>\r\n          Analyze\r\n          </div>\r\n      </div>\r\n      {displayCenter()}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../../context\";\r\nimport { Dropdown } from 'semantic-ui-react'\r\nimport {FilterType} from '../../../types';\r\nimport InformationIcon from \"../../shared/InformationIcon\";\r\n\r\nexport default function Filters() {\r\n  const [state, dispatch] = useContext(AppContext);\r\n\r\n  const formatOptions = (options: any) => {\r\n    const formatted_options: Record<string, string>[] = [];\r\n    options.forEach((o: string) => {\r\n      formatted_options.push({\r\n        key: o,\r\n        text: o,\r\n        value: o\r\n      })\r\n    });\r\n    return formatted_options;\r\n  }\r\n\r\n  const addFilter = (data: any, filter_type: string) => {\r\n    dispatch({\r\n      type: 'UPDATE_FILTER',\r\n      payload: {\r\n        filter_type,\r\n        filter_value: data.value\r\n      }\r\n    });\r\n  }\r\n\r\n  const buildSectionHeader = (header_text: string, tooltip_text?: string | React.ReactNode, tooltip_header?: string) => {\r\n    return(\r\n      <div className=\"pb-2 flex\">\r\n        <div className=\"filter-section-header\">{header_text}</div>\r\n        {tooltip_text && (\r\n          <div className=\"tooltip-vert-adj\">\r\n            <InformationIcon\r\n                offset={10}\r\n                position=\"bottom right\"\r\n                color=\"#455a64\"\r\n                tooltipHeader={tooltip_header ? tooltip_header : header_text}\r\n                popupSize=\"small\"\r\n                size=\"sm\"\r\n                tooltip={tooltip_text}/>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const buildFilterDropdown = (filter_type: FilterType, placeholder: string) => {\r\n    return(\r\n      <div className=\"pb-3\">\r\n        <Dropdown \r\n          text={placeholder}\r\n          fluid\r\n          multiple\r\n          search \r\n          selection \r\n          options={formatOptions(state.filter_options[filter_type])}\r\n          onChange={(e: any, data: any) => {addFilter(data, filter_type)}} \r\n          defaultValue={Array.from(state.filters[filter_type])}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-12 p-0\">\r\n      <div className=\"py-3 center flex\">\r\n        <div className=\"section-title\">\r\n          FILTER\r\n        </div>\r\n        <div className=\"tooltip-vert-adj\">\r\n          <InformationIcon\r\n              offset={10}\r\n              position=\"bottom right\"\r\n              color=\"#455a64\"\r\n              tooltipHeader={\"Filters\"}\r\n              popupSize=\"small\"\r\n              size=\"sm\"\r\n              tooltip={'Filter the SeroTracker dataset based on geography, study, demographics, and test. Only studies matching all of the listed filters will be included.'}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-10 col align-items-center p-0\">\r\n          <div className=\"pb-1\">\r\n            <div>\r\n              {buildSectionHeader('Geography', 'Select countries of interest.')}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('country', 'Country')}\r\n            </div> \r\n          </div>\r\n          <div className=\"pb-1\">\r\n            <div>\r\n              {\r\n                buildSectionHeader('Study Information', \r\n                <div>\r\n                  <p>\r\n                    Filter on study details, including source type (publication, preprint, news, or report) and study status (ongoing, completed).\r\n                  </p>\r\n                  <p>\r\n                  Risk of Bias: Reflects the extent to which the true prevalence may be different from the estimated prevalence. Estimated by SeroTracker reviewers based on the Joanna Briggs Institute critical appraisal tool for prevalence estimates.\r\n                  </p>\r\n                </div>)\r\n              }\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('source_type', 'Source Type')}\r\n            </div> \r\n            <div>\r\n              {buildFilterDropdown('study_status', 'Study Status')}\r\n            </div> \r\n            <div>\r\n              {buildFilterDropdown('risk_of_bias', 'Overall Risk of Bias')}\r\n            </div> \r\n          </div>\r\n          <div className=\"pb-1\">\r\n            <div>\r\n              {buildSectionHeader('Demographics', 'Filter on demographic variables, including population group, sex, and age group.')}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('population_group', 'Population Group')}\r\n            </div> \r\n            <div>\r\n              {buildFilterDropdown('sex', 'Sex')}\r\n            </div> \r\n            <div>\r\n              {buildFilterDropdown('age', 'Age')}\r\n            </div>\r\n          </div>\r\n          <div className=\"pb-1\">\r\n            <div>\r\n              {buildSectionHeader('Test Information', 'Filter on test details, including assay type and antibody isotype.')}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('test_type', 'Test Type')}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('isotypes_reported', 'Isotypes Reported')}\r\n            </div>\r\n          </div> \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../../context\";\r\nimport { aggregateRecords } from \"../../../metaAnalysis\";\r\nimport InformationIcon from \"../../shared/InformationIcon\";\r\nimport { MIN_DENOMINATOR } from \"../../../metaAnalysis\"\r\nimport './TotalStats.css';\r\n\r\n\r\nexport default function TotalStats() {\r\n  const [state] = useContext(AppContext);\r\n\r\n  const { seroprevalence, n } = aggregateRecords(state.filtered_records);\r\n  function onlyUnique(value: any, index: number, self: any) {\r\n    return self.indexOf(value) === index && value !== null;\r\n  }\r\n  const countryDict = state.filtered_records\r\n    .map(o => {\r\n      if (o.seroprevalence !== null && o.denominator !== null) {\r\n        return o.country\r\n      }\r\n      return null;\r\n    })\r\n    .filter(onlyUnique);\r\n  const countries = countryDict.length;\r\n\r\n  const countriesOrCountry = () => {\r\n    return countries > 1 && countries !== 0 ? \"Countries\" : \"Country\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-12 p-0\">\r\n      <div className=\"col-12 py-3 section-title center\">SUMMARY STATISTICS</div>\r\n      <div className=\"col-12 p-0 flex\">\r\n        <div className=\"main-statistic-title col-12 p-0 center-item flex\">Seroprevalence\r\n          <InformationIcon\r\n            color=\"#468ac1\"\r\n            offset={-12}\r\n            tooltip={\r\n            <div>\r\n              <p>\r\n                Prevalence of antibodies against SARS-CoV-2, aggregated within the filters you have selected.\r\n              </p>\r\n              <p>\r\n                NB: This should not be interpreted as a representative estimate of seroprevalence in the region of interest, especially if the aggregated studies have biased samples.\r\n              </p>\r\n              <p>\r\n                {`Pooling technique: fixed effects inverse-variance weighted aggregation of records with sample size over ${MIN_DENOMINATOR}.`}\r\n              </p>\r\n            </div>\r\n            }\r\n            size=\"xs\"\r\n            tooltipHeader=\"Aggregated Prevalence\" /></div>\r\n        <div className=\"main-statistic col-12 p-0 center\">{seroprevalence ? `${seroprevalence.toFixed(2)}%` : \"No Data\"}</div>\r\n      </div>\r\n      <div className=\"col-12 flex middle py-2\">\r\n        <div className=\"secondary-statistic-title center p-0 col-12\">Tests Administered</div>\r\n        <div className=\"secondary-statistic col-12 p-0 center\">{n}</div>\r\n      </div>\r\n      <div className=\"col-12 flex middle py-2\">\r\n        <div className=\"secondary-statistic px-1 center\">{countries}</div>\r\n        <div className=\"secondary-statistic-title px-1 center\">{countriesOrCountry()}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import _ from \"lodash\";\r\nimport React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../../context\";\r\nimport { getAggregateData } from \"../../../metaAnalysis\";\r\nimport { AggregationFactor } from \"../../../types\";\r\nimport './CountryList.css';\r\n\r\nexport default function CountryList() {\r\n  const [state] = useContext(AppContext);\r\n\r\n  const aggregatedData = _.sortBy(getAggregateData(state.filtered_records, AggregationFactor.country), ['seroprevalence']).reverse();\r\n\r\n  return (\r\n    <div className=\"col-12 px-0 country-list-container\">\r\n      <div className=\"section-title py-2 center\">\r\n        SEROPREVALENCE BY COUNTRY\r\n      </div>\r\n      <div className=\"item-list-container\">\r\n        {aggregatedData.map(o => {\r\n          return (\r\n            <div className=\"col-12 p-0 flex item-container\" key={Math.random()}>\r\n              <div className=\"p-2 country-name\">\r\n                {o.name}\r\n              </div>\r\n              <div className=\"p-2 country-stat\">\r\n                {(o.seroprevalence as Number).toFixed(2)}\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from \"react\";\r\n// import { AppContext } from \"../../../context\";\r\nimport { Sidebar, Segment, Menu } from \"semantic-ui-react\";\r\nimport Filters from \"../sidebar/right-sidebar/Filters\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faFilter, faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport TotalStats from \"../sidebar/left-sidebar/TotalStats\";\r\nimport CountryList from \"../sidebar/left-sidebar/CountryList\";\r\nimport CentralPiece from \"../CenterComponent\";\r\n\r\n\r\nexport default function MobileComponents() {\r\n  const [showMobileFilters, setShowFilters] = useState(false);\r\n  const [showSummary, setShowSummary] = useState(false);\r\n\r\n  const handleFilterToggle = (showMobile: boolean, showSummary: boolean) => {\r\n    setShowFilters(showMobile);\r\n    setShowSummary(showSummary);\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-12 p-0\"> <Sidebar.Pushable as={Segment} className=\"col-12 p-0\">\r\n      {/* Filters */}\r\n      <Sidebar\r\n        as={Menu}\r\n        animation='overlay'\r\n        icon='labeled'\r\n        className=\"col-10 p-0\"\r\n        vertical\r\n        direction=\"left\"\r\n        visible={showMobileFilters}\r\n        width='wide'\r\n      >\r\n\r\n        <Filters />\r\n        <FontAwesomeIcon\r\n          icon={faTimes}\r\n          onClick={() => handleFilterToggle(false, false)}\r\n          className={'icon'}\r\n          color={'#455a64'}\r\n          style={{ fontWeight: 300, position: 'absolute', zIndex: 3000, top: 10, right: 20 }}\r\n          size={\"lg\"} />\r\n      </Sidebar>\r\n      {/* Left Sidebar */}\r\n      <Sidebar\r\n        as={Menu}\r\n        animation='overlay'\r\n        icon='labeled'\r\n        className=\"col-10 p-0\"\r\n        vertical\r\n        direction=\"left\"\r\n        visible={showSummary}\r\n        width='wide'\r\n      >\r\n        <TotalStats />\r\n        <CountryList />\r\n        <FontAwesomeIcon\r\n          icon={faTimes}\r\n          onClick={() => handleFilterToggle(false, false)}\r\n          className={'icon'}\r\n          color={'#455a64'}\r\n          style={{ fontWeight: 300, position: 'absolute', zIndex: 3000, top: 10, right: 20 }}\r\n          size={\"lg\"} />\r\n      </Sidebar>\r\n      <Sidebar.Pusher className=\"col-12 p-0\">\r\n        <CentralPiece />\r\n        {/* Icons */}\r\n        <div className=\"icon-container\"\r\n          style={{ top: 10, right: 15 }}>\r\n          <FontAwesomeIcon\r\n            icon={faFilter}\r\n            onClick={() => handleFilterToggle(!showMobileFilters, false)}\r\n            className={'icon'}\r\n            color={'#455a64'}\r\n            size={\"2x\"} />\r\n        </div>\r\n        <div className=\"icon-container\"\r\n          style={{ top: 10, right: 58 }}>\r\n          <FontAwesomeIcon\r\n            icon={faBars}\r\n            onClick={() => handleFilterToggle(false, !showSummary)}\r\n            className={'icon'}\r\n            color={'#455a64'}\r\n            size={\"2x\"} />\r\n        </div>\r\n      </Sidebar.Pusher>\r\n    </Sidebar.Pushable>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport CountryList from \"./CountryList\";\r\nimport TotalStats from \"./TotalStats\";\r\nimport \"../sidebar.css\"\r\n\r\nexport default function LeftSidebar() {\r\n  return (\r\n    <div className=\"col-12 p-0 sidebar-container\">\r\n      <TotalStats/>\r\n      <CountryList/>\r\n    </div>\r\n  )\r\n}","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../../context\";\r\nimport InformationIcon from \"../../shared/InformationIcon\";\r\nimport './RightSidebar.css';\r\n\r\nexport default function LastUpdated() {\r\n  const [state] = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"col-12 pb-4\">\r\n      <div className='col-12 p-0 center-item flex'>\r\n        <div className=\"section-title\">\r\n          LAST UPDATED\r\n        </div>\r\n        <div className=\"tooltip-vert-adj\">\r\n          <InformationIcon\r\n              offset={10}\r\n              position=\"top right\"\r\n              color=\"#455a64\"\r\n              tooltipHeader={\"Last Updated\"}\r\n              popupSize=\"small\"\r\n              size=\"sm\"\r\n              tooltip={'SeroTracker is continuously updated with findings from newly-released serological studies. We include new studies from our search within 48 hours of publication.'}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"py-2 center\">\r\n        {state.updated_at}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Filters from \"./Filters\";\r\nimport LastUpdated from \"./LastUpdated\";\r\nimport \"../sidebar.css\"\r\nimport \"./RightSidebar.css\"\r\n\r\nexport default function RightSidebar() {\r\n  return (\r\n    <div className=\"col-12 p-0 d-flex flex-column justify-content-between sidebar-container\">\r\n      <div className=\"filters-container mb-3\">\r\n        <Filters/>\r\n      </div>\r\n      <div>\r\n        <LastUpdated/>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { mobileDeviceOrTabletWidth } from \"../../constants\";\r\nimport CentralPiece from \"../CenterComponent\";\r\nimport MobileComponents from '../mobile/MobileComponents';\r\nimport LeftSidebar from \"../sidebar/left-sidebar/LeftSidebar\";\r\nimport RightSidebar from \"../sidebar/right-sidebar/RightSidebar\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nexport default function Dashboard() {\r\n\r\n  const isMobileDeviceOrTablet = useMediaQuery({ maxDeviceWidth: mobileDeviceOrTabletWidth })\r\n  return (\r\n    <div className=\"col-12 p-0 flex\">\r\n      {!isMobileDeviceOrTablet ?\r\n        (<div className=\"col-12 p-0 flex\">\r\n          <div className=\"col-2 p-0\">\r\n            <LeftSidebar />\r\n          </div>\r\n          <div className=\"col-8 p-0\">\r\n            <CentralPiece />\r\n          </div>\r\n          <div className=\"col-2 p-0\">\r\n            <RightSidebar />\r\n          </div>\r\n        </div>) :\r\n        (\r\n          <div className=\"col-12 p-0 flex\">\r\n            <MobileComponents />\r\n          </div>\r\n        )}\r\n    </div >\r\n  )\r\n}","import React from \"react\";\nimport './static.css';\nimport { useMediaQuery } from \"react-responsive\";\nimport { mobileDeviceOrTabletWidth } from \"../../constants\";\n\nexport default function About() {\n    \n    const isMobileDeviceOrTablet = useMediaQuery({ maxDeviceWidth: mobileDeviceOrTabletWidth })\n    function renderBioBlock(name: string, description: string[]){\n        return (\n            <div>\n                <b>\n                    {name}\n                </b>\n                <br/>\n                {description.map((line) => {\n                    return (\n                        <div>\n                            {line}\n                            <br/>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n    return (\n        <div className=\"page col-12\">\n            <div className={isMobileDeviceOrTablet ? \"pb-2\" : \"static-content pb-2\"}>\n                <h1>\n                    About SeroTracker\n                </h1>\n                <p>\n                    As the acute phase of the COVID-19 pandemic passes its peak, many countries are accelerating their investments in serological (antibody) testing. Understanding population antibody patterns and potential immunity is of great interest to clinicians, public health officials, and policymakers alike. <b>SeroTracker is a knowledge hub that tracks and synthesizes findings from SARS-CoV-2 serosurveillance efforts worldwide.</b>\n                </p>\n                <p>\n                    <a href=\"https://www.covid19immunitytaskforce.ca/\"><img src=\"https://www.covid19immunitytaskforce.ca/wp-content/themes/pena-lite-child/CITF_logo_ENG.svg\" alt=\"COVID-19 Immunity Task Force Logo\" height=\"45\"></img></a>\n                </p>\n                <p>\n                    SeroTracker is supported by <a href=\"https://www.covid19immunitytaskforce.ca/\">Canada's COVID-19 Immunity Task Force</a>, which brings together university, hospital and public health expertise to map the scope of coronavirus infection in Canada. The Task Force is funded by the Government of Canada and its secretariat is housed at <a href=\"https://www.mcgill.ca/spgh/\">McGill University’s School of Population and Global Health</a>. SeroTracker also provides content for the Task Force's <a href = \"https://www.covid19immunitytaskforce.ca/research/global-serological-knowledge-hub/\">Global Serological Knowledge Hub</a>.\n                </p>\n                <h2>\n                    Contact Us\n                </h2>\n                <p>\n                    We are an interdisciplinary team of researchers and engineers at the University of Oxford, University of Toronto, University of Waterloo, University of Calgary, and Harvard University.\n                </p>\n                <ul>\n                    <li>\n                        If you would like to <b>support our efforts or collaborate with us</b>, please contact Rahul Arora at <a href=\"mailto:rahul.arora@balliol.ox.ac.uk\">rahul.arora@balliol.ox.ac.uk</a> and Tingting Yan at <a href=\"mailto:tingting.yan@mail.utoronto.ca\">tingting.yan@mail.utoronto.ca</a>.\n                    </li>\n                    <li>\n                        For <b>research methods-related inquiries</b>, please contact Nik Bobrovitz at <a href=\"mailto:niklas.bobrovitz@mail.utoronto.ca\">niklas.bobrovitz@mail.utoronto.ca</a>.\n                    </li>\n                    <li>\n                        For <b>data and AirTable-related inquiries</b>, please contact Nathan Duarte at <a href=\"mailto:niduarte@uwaterloo.ca\">niduarte@uwaterloo.ca</a>.    \n                    </li>\n                    <li>\n                        For <b>dashboard-related inquiries</b>, please contact Jordan Van Wyk at <a href=\"mailto:jordan.vanwyk@uwaterloo.ca\">jordan.vanwyk@uwaterloo.ca</a>.     \n                    </li>\n                    <li>\n                        To make us aware of <b>new SARS-CoV-2 seroprevalence studies</b> or studies that we have not yet captured, please fill out <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://forms.gle/XWHQ7QPjQnzQMXSz8\">this form</a>. \n                    </li>\n                </ul>\n                <h1>\n                    Our Team\n                </h1>\n                <h2 className=\"team-name-text\">\n                    Scientific Lead\n                </h2>\n                <div>\n                    {renderBioBlock('Tim Evans', ['Director, School of Population and Global Health, McGill University', 'Executive Director, Canadian COVID-19 Immunity Task Force'])}\n                </div>\n                <h2 className=\"team-name-text\">\n                    Research Team\n                </h2>\n                <div className=\"bio-grid-container\">\n                    {renderBioBlock('Niklas Bobrovitz ', ['University of Oxford', 'University of Toronto'])}\n                    {renderBioBlock('Emily Boucher', ['University of Calgary'])}\n                    {renderBioBlock('Nathan Duarte', ['University of Waterloo'])}\n                    {renderBioBlock('Hannah Rahim', ['University of Calgary'])}\n                    {renderBioBlock('Tingting Yan', ['University of Toronto'])}\n                    {renderBioBlock('Christian Cao', ['University of Calgary'])}\n                    {renderBioBlock('Claire Donnici', ['University of Calgary'])}\n                    {renderBioBlock('Natasha Ilincic', ['University of Guelph'])}\n                    {renderBioBlock('Michael Liu', ['University of Oxford', 'Harvard University'])}\n                    {renderBioBlock('Brianna Rosgen', ['University of Calgary'])}\n                    {renderBioBlock('Mitchell Segal', ['University of Toronto'])}\n                </div>\n                <h2 className=\"team-name-text\">\n                    Development Team\n                </h2>\n                <div className=\"bio-grid-container\">\n                    {renderBioBlock('Austin Atmaja', ['University of Waterloo'])}\n                    {renderBioBlock('Rahul Arora', ['University of Oxford'])}\n                    {renderBioBlock('Abel Joseph ', ['University of Waterloo'])}\n                    {renderBioBlock('Ewan May', ['University of Calgary'])}\n                    {renderBioBlock('Simona Rocco', ['University of Waterloo'])}\n                    {renderBioBlock('Jordan Van Wyk', ['University of Waterloo'])}\n                    {renderBioBlock('Abhinav Pillai\t', ['University of Calgary'])}\n                </div>\n                <h2 className=\"team-name-text\">\n                    Economics Team\n                </h2>\n                <div className=\"bio-grid-container\">\n                    {renderBioBlock('Ruby Zhang', ['Harvard University'])}\n                    {renderBioBlock('Sahil Bablani ', ['CPP Investment Board'])}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport './static.css';\nimport { useMediaQuery } from \"react-responsive\";\nimport { mobileDeviceOrTabletWidth } from \"../../constants\";\n\nexport default function Data() {\n    const isMobileDeviceOrTablet = useMediaQuery({ maxDeviceWidth: mobileDeviceOrTabletWidth })\n    const renderPane = (src: string) => {\n        return <Tab.Pane className=\"col-12 p-0\">\n            <iframe\n                title=\"airtable-embed\"\n                className=\"airtable-embed col-12 p-0\"\n                src={src}\n                width=\"85%\"\n                height=\"650\"\n            /></Tab.Pane>\n    }\n\n    const panes = [{\n        menuItem: isMobileDeviceOrTablet ? 'Serosurveys' : 'Serosurveys Reporting Prevalence',\n        render: () => renderPane('https://airtable.com/embed/shraXWPJ9Yu7ybowM?backgroundColor=blue&viewControls=on')\n    },\n    {\n        menuItem: 'Planned Serosurveys',\n        render: () => renderPane('https://airtable.com/embed/shr85cDHzwETbjgdu?backgroundColor=blue&viewControls=on')\n    }];\n\n    return (\n        <div className=\"col-12 page\">\n            <div className={isMobileDeviceOrTablet ? \"pb-2\" : \"static-content pb-2\"}>\n                <h1>\n                    Methods\n                </h1>\n                <p>\n                    SeroTracker provides an up-to-date systematic synthesis of SARS-CoV-2 serosurveillance projects globally. We screened peer-reviewed articles, preprints, government reports, and media articles to identify the prevalence estimates reported below. Our data is updated daily with all new reports of seroprevalence findings that were captured in our search. \n                </p>\n                <p>\n                You can view our full methods <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.google.com/document/d/1NYpszkr-u__aZspFDFa_fa4VBzjAAAAxNxM1rZ1txWU/edit?usp=sharing\">here.</a> To submit a SARS-CoV-2 seroprevalence study that we have not yet captured below, use <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://forms.gle/XWHQ7QPjQnzQMXSz8\">this form</a>.\n                </p>\n                <h1>\n                    Paper\n                </h1>\n                <p>\n                    Our first manuscript, describing lessons from serosurveys up to May 1, can be found on <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.medrxiv.org/content/10.1101/2020.05.10.20097451v1\">medRxiv</a>.\n                </p>\n                <h1>\n                    Our Data\n                </h1>\n                <p>\n                    The tables below describe our findings, including detailed information about each study, each prevalence estimate, and the associated risk of bias.  \n                </p>\n                <ul>\n                    <li>\n                        <p>\n                            <b>Serosurveys Reporting Prevalence</b> captures all studies reporting prevalence estimates\n                        </p>\n                    </li>\n                    <li>\n                        <p>\n                            <b>Planned Serosurveys</b> describes studies that have not yet reported seroprevalence estimates\n                        </p>\n                    </li>\n                </ul>\n            </div>\n            <Tab className=\"col-10 p-0 airtable-embed vertical-spacer\" panes={panes} />\n        </div>\n    )\n}\n","import { AirtableRecord } from \"./types\"\n\nexport default class httpClient {\n    async httpGet(url: string){\n        let url_full = url;\n        if(process.env.REACT_APP_ROUTE){\n            url_full = process.env.REACT_APP_ROUTE + url_full;\n        }\n        const res = await fetch(url_full);\n        if(res.status !== 200) {\n            return;\n        }\n        else {\n            const response_json = await res.json();\n            return response_json;\n        }\n    }\n\n    async getHealthcheck() {\n        const healthcheck: string = await this.httpGet('/healthcheck');\n        return healthcheck;\n    }\n\n    async getAirtableRecords() {\n        const response = await this.httpGet('/airtable_scraper/records');\n        if(!response || !(\"records\" in response) || !(\"updated_at\" in response)) {\n            return [];\n        }\n        const airtable_records = response.records!.map((item: Record<string, any>)=>{ \n            // Convert response to AirtableRecord type\n            const record: AirtableRecord = { \n                source_name: item.SOURCE_NAME ? item.SOURCE_NAME[0] : null,\n                lead_org: item.LEAD_ORG ? item.LEAD_ORG[0] : null,\n                first_author: item.FIRST_AUTHOR ? item.FIRST_AUTHOR[0]: null,\n                source_type: item.SOURCE_TYPE ? item.SOURCE_TYPE[0]: null,\n                study_status: item.STUDY_STATUS ? item.STUDY_STATUS[0]: null,\n                study_type: item.STUDY_TYPE,\n                test_type: item.TEST_TYPE,\n                isotypes_reported: item.ISOTYPES,\n                manufacturer: item.MANUFACTURER,\n                approving_regulator: item.APPROVAL,\n                sensitivity: item.SENSITIVITY,\n                specificity: item.SPECIFICITY,\n                publish_date: item.PUB_DATE,\n                publisher: item.PUBLISHER,\n                country: item.COUNTRY ? item.COUNTRY[0] : null,\n                state: item.STATE,\n                city: item.CITY,\n                population_group: item.POPULATION_GROUP,\n                sex: item.SEX,\n                age: item.AGE,\n                denominator: item.DENOMINATOR,\n                summary: item.SUMMARY,\n                seroprevalence: item.SERUM_POS_PREVALENCE,\n                sample_size: item.SAMPLE_SIZE,\n                sampling_method: item.SAMPLING,\n                sampling_start_date: item.SAMPLING_START,\n                sampling_end_date: item.SAMPLING_END,\n                risk_of_bias: item.OVERALL_RISK_OF_BIAS ? item.OVERALL_RISK_OF_BIAS[0] : null,\n                url: item.URL ? item.URL[0] : null\n            };\n\n            return record; \n        });\n        \n        // Remove timestamp from updated at string\n        const updated_at_words = response.updated_at!.split(\" \", 4);\n        const updated_at_string = updated_at_words.join(\" \");\n\n        return {\n            airtable_records,\n            updated_at: updated_at_string\n        };\n    }\n}","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport './App.css';\nimport Icon from './assets/images/two-tone-light.svg';\nimport Dashboard from \"./components/pages/Data\";\nimport About from './components/static/About';\nimport Data from './components/static/Home';\nimport { AppContext } from \"./context\";\nimport httpClient from \"./httpClient\";\n\nfunction App() {\n  const [tab, setTab] = useState(\"\");\n  const [, dispatch] = useContext(AppContext);\n\n  // DATA\n  useEffect(() => {\n    const api = new httpClient()\n    const getAirtableRecords = async () => {\n      const response = await api.getAirtableRecords()\n      dispatch({\n        type: 'GET_AIRTABLE_RECORDS',\n        payload: response\n      });\n    }\n    getAirtableRecords();\n  }, [dispatch])\n\n  // ROUTING TABS\n  const usePageViews = () => {\n    let location = useLocation();\n    useEffect(() => {\n      setTab(location.pathname)\n    }, [location]);\n  }\n  \n  usePageViews()\n\n  const getTabClass = (tabName: string) => {\n    return tabName === tab ? 'bold center' : 'regular center'\n  }\n\n  // AUTHENTICATION\n  // let authStatus = false;\n\n  // if (localStorage.hasOwnProperty('authenticated')) {\n  //   authStatus = localStorage.getItem('authenticated') !== null;\n  // }\n  // const [auth, setAuth] = useState(authStatus);\n\n\n  // function authenticate() {\n  //   setAuth(true);\n  //   // Workaround because only string values can be saved to localStorage\n  //   localStorage.setItem('authenticated', 'true');\n  // }\n\n  return (\n    <div className=\"App-container\">\n      {/* {auth === false ? (\n        <Auth authenticate={authenticate} />\n      ) : ( */}\n          <div className=\"col-12 p-0\">\n            <header className=\"App-header col-12 px-sm-2\">\n              <div className=\"App-title col-auto py-3 px-0 flex left \">\n                <Link to=\"/\" className=\"flex\">\n                  <img src={Icon} width={23} height={23} alt=\"\" />\n                  <div className=\"col-auto px-2\" >SeroTracker</div>\n                </Link>\n              </div>\n              <div className=\"App-tabs p-0 col-sm-8 col-lg-3\">\n                <Link className={getTabClass('/Dashboard')} to=\"/Dashboard\">Dashboard</Link>\n                <Link className={getTabClass('/Data')} to=\"/Data\">Data</Link>\n                <Link className={getTabClass('/About')} to=\"/About\">About</Link>\n              </div>\n            </header>\n\n            <Switch>\n              <Route path=\"/About\">\n                <About />\n              </Route>\n              <Route path=\"/Dashboard\">\n                <Dashboard />\n              </Route>\n              <Route path=\"/Data\">\n                <Data />\n              </Route>\n              <Redirect exact from=\"/\" to=\"/Dashboard\" />\n            </Switch>\n          </div>\n        )\n      }\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from './App';\nimport { AppContextProvider } from './context';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <AppContextProvider>\n        <App />\n      </AppContextProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}