{"version":3,"sources":["components/static/About.tsx","components/static/Home.tsx","components/static/FAQ.tsx","components/static/Auth/Auth.tsx","components/static/Auth/AuthController.ts","App.tsx","serviceWorker.js","index.js"],"names":["About","renderBioBlock","name","description","map","line","className","href","Home","type","title","src","width","height","FAQ","Auth","props","useState","passEntry","setPassEntry","onSubmit","e","password","preventDefault","crypto","decrypt","toString","Utf8","authenticate","alert","Input","focus","onChange","target","value","placeholder","Button","content","primary","App","tab","setTab","authStatus","localStorage","hasOwnProperty","getItem","auth","setAuth","setActiveTab","getTabClass","tabName","setItem","onClick","renderContent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+VAGe,SAASA,IAEpB,SAASC,EAAeC,EAAcC,GAClC,OACI,6BACI,2BACKD,GAEL,6BACCC,EAAYC,KAAI,SAACC,GACd,OACI,6BACKA,EACD,kCAOxB,OACI,yBAAKC,UAAU,eACX,yBAAKA,UAAU,kBACX,0CAGA,iHAGA,8CAGA,yBAAKA,UAAU,sBACVL,EAAe,cAAe,CAAC,yBAC/BA,EAAe,oBAAqB,CAAC,uBAAwB,0BAC7DA,EAAe,gBAAiB,CAAC,0BACjCA,EAAe,gBAAiB,CAAC,2BACjCA,EAAe,eAAgB,CAAC,0BAChCA,EAAe,eAAgB,CAAC,2BAErC,0EACgD,uBAAGM,KAAK,4CAAR,qCADhD,KAGA,kDAGA,yBAAKD,UAAU,sBACVL,EAAe,gBAAiB,CAAC,2BACjCA,EAAe,eAAgB,CAAC,2BAChCA,EAAe,WAAY,CAAC,0BAC5BA,EAAe,eAAgB,CAAC,2BAChCA,EAAe,iBAAkB,CAAC,4BAEvC,yEAC+C,uBAAGM,KAAK,qCAAR,8BAD/C,OCrDD,SAASC,IACpB,OACI,yBAAKF,UAAU,eACX,yBAAKA,UAAU,kBACX,yEAGA,gIAGA,gYAGA,uIAGA,umBAGA,2DAGA,4BACI,2NAGA,4BACI,wGAEI,wBAAIG,KAAK,KACL,4BACI,8DAEI,wBAAIA,KAAK,KACL,kIAGA,gEAMZ,4BACI,gDAEI,wBAAIA,KAAK,KACL,4DAGA,wDASxB,2HAGA,yKAIJ,gEAGA,4CAIJ,4BACIC,MAAM,iBACNJ,UAAU,4BACVK,IAAI,oFACJC,MAAM,MACNC,OAAO,SC9ER,SAASC,IACpB,OACI,yBAAKR,UAAU,eACX,yBAAKA,UAAU,kBACX,6C,+BCHD,SAASS,EAAKC,GAA6B,IAAD,EACnBC,mBAAS,IADU,mBAC9CC,EAD8C,KACnCC,EADmC,KAmBrD,OACI,yBAAKb,UAAU,+BACX,wBAAIA,UAAU,+BAAd,eAGA,0BAAMc,SArBd,SAAsBC,GAElB,ICNsBC,EDKtBD,EAAEE,kBCLoBD,EDMcJ,ECL5B,qBAESM,MAAWC,QADd,mEACiCH,GAChBI,SAASF,MAAWG,ODI/CX,EAAMY,eAGNC,MAAM,6BAcwBvB,UAAU,0CACpC,kBAACwB,EAAA,EAAD,CACIC,OAAK,EACLtB,KAAK,WACLuB,SAdhB,SAAsBX,GAClBA,EAAEE,iBACFJ,EAAaE,EAAEY,OAAOC,QAaVA,MAAOhB,EACPZ,UAAU,MACV6B,YAAY,eAChB,kBAACC,EAAA,EAAD,CAAQ3B,KAAK,SAAS4B,QAAQ,SAC1B/B,UAAU,WAAWgC,SAAO,M,OEoCjCC,MAlEf,WAAgB,IAAD,EACStB,mBAAS,QADlB,mBACNuB,EADM,KACDC,EADC,KAGTC,GAAa,EACbC,aAAaC,eAAe,mBAC9BF,EAAuD,OAA1CC,aAAaE,QAAQ,kBALvB,MAOW5B,mBAASyB,GAPpB,mBAONI,EAPM,KAOAC,EAPA,KAsBb,SAASC,EAAa3B,EAAQmB,GAC5BnB,EAAEE,iBACFkB,EAAOD,GAST,IAAMS,EAAc,SAACC,GACnB,OAAOA,IAAYV,EAAM,OAAS,WAGpC,OACE,yBAAKlC,UAAU,kBACH,IAATwC,EACC,kBAAC/B,EAAD,CAAMa,aAbZ,WACEmB,GAAQ,GAERJ,aAAaQ,QAAQ,gBAAiB,WAYlC,yBAAK7C,UAAU,kBACb,4BAAQA,UAAU,0BAChB,yBAAKA,UAAU,kBAAf,eAGA,yBAAKA,UAAU,YACb,yBAAKA,UAAW2C,EAAY,QAASG,QAAS,SAAC/B,GAAD,OAAO2B,EAAa3B,EAAG,UAArE,QAGA,yBAAKf,UAAW2C,EAAY,SAAUG,QAAS,SAAC/B,GAAD,OAAO2B,EAAa3B,EAAG,WAAtE,SAGA,yBAAKf,UAAW2C,EAAY,OAAQG,QAAS,SAAC/B,GAAD,OAAO2B,EAAa3B,EAAG,SAApE,SA7CZ,WACE,OAAQmB,GACN,IAAK,QACH,OAAO,kBAACxC,EAAD,MACT,IAAK,MACH,OAAO,kBAACc,EAAD,MACT,IAAK,OACH,OAAO,kBAACN,EAAD,MACT,QACE,OAAO,+BAyCJ6C,MCtDSC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.89754677.chunk.js","sourcesContent":["import React from \"react\";\nimport './static.css';\n\nexport default function About() {\n\n    function renderBioBlock(name: string, description: string[]){\n        return (\n            <div>\n                <b>\n                    {name}\n                </b>\n                <br/>\n                {description.map((line) => {\n                    return (\n                        <div>\n                            {line}\n                            <br/>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n    return (\n        <div className=\"static-page\">\n            <div className=\"static-content\">\n                <h1>\n                    Who We Are\n                </h1>\n                <p>\n                    We are an interdisciplinary group of researchers, engineers, and medical trainees.\n                </p>\n                <h2>\n                    Research Team:\n                </h2>\n                <div className=\"bio-grid-container\">\n                    {renderBioBlock('Rahul Arora', ['University of Oxford'])}\n                    {renderBioBlock('Niklas Bobrovitz ', ['University of Oxford', 'University of Toronto'])}\n                    {renderBioBlock('Emily Boucher', ['University of Calgary'])}\n                    {renderBioBlock('Nathan Duarte', ['University of Waterloo'])}\n                    {renderBioBlock('Hannah Rahim', ['University of Calgary'])}\n                    {renderBioBlock('Tingting Yan', ['University of Toronto'])}\n                </div>\n                <p>\n                    Please direct research-related inquiries to <a href=\"mailto:niklas.bobrovitz@mail.utoronto.ca\">niklas.bobrovitz@mail.utoronto.ca</a>.\n                </p>\n                <h2>\n                    Data Science Team:\n                </h2>\n                <div className=\"bio-grid-container\">\n                    {renderBioBlock('Austin Atmaja', ['University of Waterloo'])}\n                    {renderBioBlock('Abel Joseph ', ['University of Waterloo'])}\n                    {renderBioBlock('Ewan May', ['University of Calgary'])}\n                    {renderBioBlock('Simona Rocco', ['University of Waterloo'])}\n                    {renderBioBlock('Jordan Van Wyk', ['University of Waterloo'])}\n                </div>\n                <p>\n                    Please direct website-related inquiries to <a href=\"mailto:jordan.vanwyk@uwaterloo.ca\">jordan.vanwyk@uwaterloo.ca</a>.\n                </p>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport './static.css';\n\nexport default function Home() {\n    return (\n        <div className=\"static-page\">\n            <div className=\"static-content\">\n                <h1>\n                    About the Global Serosurveillance Project\n                </h1>\n                <h4>\n                    The world is shifting towards building a long-term recovery strategy from the COVID-19 pandemic.\n                </h4>\n                <p>\n                    Antibody (also known as serology) tests are blood-based tests that provide evidence of previous exposure to the virus, regardless of whether someone has developed symptoms. Antibody testing may provide insights to levels of background community immunity, which can help support policy decisions around reopening the economy and returning to normal life.\n                </p>\n                <h4>\n                    We aim to provide up-to-date synthesis of the results of SARS-CoV-2 sero-surveys from around the world.\n                </h4>\n                <p>\n                In early April, we noticed the accelerating momentum behind antibody testing. To capture information from these serosurveillance projects, we developed a ‘living’ rapid review, creating the infrastructure to extract serology testing data from governments, research institutions, and corporations as it was released. Given the wide range in sampling strategy, we developed a system to critically appraise the population immunity estimates from news sources, grey literature, and scientific articles. We soon plan to visualize these estimates through an interactive world map.\n                </p>\n                <h1>\n                    Our Methods (in a nutshell)\n                </h1>\n                <ol>\n                    <li>\n                        We are conducting an abbreviated systematic review, informed by Cochrane guidance, to capture all proposed, on-going, or completed cross-sectional SARS-CoV-2 serosurveys around the world.                 \n                    </li>\n                    <li>\n                        <div>\n                            We searched electronic data sources from December 1, 2019 - May 1, 2020:\n                            <ol type=\"a\">\n                                <li>\n                                    <div>\n                                        Academic literature databases: \n                                        <ol type=\"i\">\n                                            <li>\n                                                Published: PubMed, high-impact journals (BMJ, JAMA, NEJM, The Lancet, Annals of Internal Medicine)\n                                            </li>\n                                            <li>\n                                                Unpublished: MedRXIV, BioRXIV\n                                            </li>\n                                        </ol>\n                                    </div>\n                                </li>\n                                <li>\n                                    <div>\n                                        Grey literature: \n                                        <ol type=\"i\">\n                                            <li>\n                                                Reports: WHO, NIH, CDC, ECDC\n                                            </li>\n                                            <li>\n                                                Media: Google News\n                                            </li>\n                                        </ol>\n                                    </div>\n                                </li>\n                            </ol>\n                        </div>\n                    </li>\n                    <li>\n                        We continually updated evidence by subscribing to automatic email updates from all sources.\n                    </li>\n                    <li>\n                        We critically appraised evidence based on the Joanna Briggs Institute Critical Appraisal Checklist for Studies Reporting Prevalence Data\n                    </li>\n                </ol>\n                <p>\n                    Our full methods can be found at:\n                </p>\n                <h1>\n                    Our Results\n                </h1>\n            </div>\n            <iframe\n                title=\"airtable-embed\"\n                className=\"airtable-embed col-10 p-0\" \n                src=\"https://airtable.com/embed/shrtxrrlZkOgzEl7O?backgroundColor=blue&viewControls=on\" \n                width=\"85%\"\n                height=\"650\"\n            />\n        </div>\n    )\n}","import React from \"react\";\nimport './static.css';\n\nexport default function FAQ() {\n    return (\n        <div className=\"static-page\">\n            <div className=\"static-content\">\n                <h1>\n                    Coming Soon\n                </h1>\n            </div>\n        </div>\n    )\n}","import React, { useState } from \"react\";\nimport { Input, Button } from 'semantic-ui-react'\nimport { checkPassword } from \"./AuthController\"\n\nexport default function Auth(props: Record<string, any>) {\n    const [passEntry, setPassEntry] = useState('');\n\n    function handleSubmit(e: any) {\n        e.preventDefault();\n        const passwordValid = checkPassword(passEntry);\n        if (passwordValid) {\n            props.authenticate();\n        }\n        else {\n            alert('Invalid password entered');\n        }\n    }\n\n    function handleChange(e: any) {\n        e.preventDefault();\n        setPassEntry(e.target.value)\n    }\n\n    return (\n        <div className=\"col-12 p-0 flex center-item\">\n            <h2 className=\"col-12 p-0 center-item flex\">\n                SeroTracker\n            </h2>\n            <form onSubmit={handleSubmit} className=\"input-group col-4 p-0 center-item flex\">\n                <Input\n                    focus\n                    type=\"password\"\n                    onChange={handleChange}\n                    value={passEntry}\n                    className=\"col\"\n                    placeholder=\"Passphrase\" />\n                <Button type=\"submit\" content=\"Submit\" \n                    className=\"col-auto\" primary>\n                </Button>\n            </form>\n        </div>\n    )\n}","import * as crypto from \"crypto-js\";\n\n// Note, this password protection method is intended for deterrence, not a robust security solution\nexport function checkPassword(password: string) {\n    const msg = \"decrypted string\"\n    const encrypted = \"U2FsdGVkX1/8XcUQ6PdvFxmM8rTNnwQeyb+MvIXh2hrwvoER4IWLu1It5+Hv/28K\";\n    const decryptedMsg = crypto.AES.decrypt(encrypted, password);\n    const passwordValid = decryptedMsg.toString(crypto.enc.Utf8) === msg;\n    return passwordValid;\n}","import React, { useState } from \"react\";\nimport About from './components/static/About';\nimport Home from './components/static/Home';\nimport FAQ from './components/static/FAQ';\nimport Auth from './components/static/Auth/Auth';\nimport './App.css';\n\nfunction App() {\n  const [tab, setTab] = useState(\"Home\");\n\n  let authStatus = false;\n  if (localStorage.hasOwnProperty('authenticated')){\n    authStatus = localStorage.getItem('authenticated') !== null;\n  }\n  const [auth, setAuth] = useState(authStatus);\n\n  function renderContent() {\n    switch (tab) {\n      case 'About':\n        return <About/>\n      case 'FAQ':\n        return <FAQ/>\n      case 'Home':\n        return <Home/>\n      default: \n        return <div/>\n    }\n  }\n\n  function setActiveTab(e: any, tab: string){\n    e.preventDefault()\n    setTab(tab)\n  }\n\n  function authenticate(){\n    setAuth(true);\n    // Workaround because only string values can be saved to localStorage\n    localStorage.setItem('authenticated', 'true');\n  }\n\n  const getTabClass = (tabName: string) => {\n    return tabName === tab ? 'bold' : 'regular'\n  }\n  \n  return (\n    <div className=\"App-container\">\n      {auth === false ? (\n        <Auth authenticate={authenticate}/>\n      ) : (\n        <div className=\"App col-12 p-0\">\n          <header className=\"App-header col-12 px-3\">\n            <div className=\"App-title py-3\">\n              SeroTracker\n            </div>\n            <div className=\"App-tabs\">\n              <div className={getTabClass('Home')} onClick={(e) => setActiveTab(e, \"Home\")}>\n                Home\n              </div>\n              <div className={getTabClass('About')} onClick={(e) => setActiveTab(e, \"About\")}>\n                About\n              </div>\n              <div className={getTabClass('FAQ')} onClick={(e) => setActiveTab(e, \"FAQ\")}>\n                FAQ\n              </div>\n            </div>\n          </header>\n          {renderContent()}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}